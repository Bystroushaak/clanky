class map as "ObjectMap <i>id:2000</i>" {
    {field}._slots : {
    {field}\t'a': 0,
    {field}\t'a:': 1,
    {field}\t'value': 2
    {field}}
    {field}._parent_slots : {
    {field}\t'p*': 0
    {field}}
    .primitive_code : None
    .parameters : [ ]
}

class obj as "Object <i>id:100</i>" {
    {field}.map : ObjectMap(id:2000)
    {field}.scope_parent : None
    {field}._slot_values : [
    {field}\tPrimitiveIntObject(1),
    {field}\tObject(id:50),
    {field}\tPrimitiveIntObject(2)
    {field}]
    {field}._parent_slot_values : [
    {field}\tObject(id:99)
    {field}]
}


class another_obj as "Object <i>id:101</i>" {
    {field}.map : ObjectMap(id:2000)
    {field}.scope_parent : None
    {field}._slot_values : [
    {field}\t<b>PrimitiveIntObject(5)</b>,
    {field}\tObject(id:50),
    {field}\tPrimitiveIntObject(2)
    {field}]
    {field}._parent_slot_values : [
    {field}\tObject(id:99)
    {field}]
}


obj -u-> map: use
another_obj -u-> map: use

obj .r[hidden]. another_obj